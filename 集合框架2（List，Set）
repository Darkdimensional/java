Collection
	|--List：有序（存入和取出的顺序一致），元素都有索引（角标），元素可以重复。
	|--Set：元素不能重复，无序。
	
List：特有的常见方法：有一个共性特点就是都可以操作角标。
1、添加
	void add(index,element);
	void add(index,Collection);
2、删除
	Object remove(index);
3、修改
	Object set(index,element);
4、获取
	Object get(index);
	int indexOf(Object);
	int lastIndexOf(object);
	List subList(from,to);
	

List:
	|--Vector:内部是数组数据结构。是同步的。速度慢。
	|--ArrayList:内部是数组数据结构，是不同的。替代了Vector。查询速度快。
	|--LinkedList:内部是链表数据结构，是不同的。增删元素速度快。
	
	
LinkedList:
	addFirst();
	addLast();
	jdk1.6
	offerFirst();
	offetLast();
	
	getFirst(); //如果链表为空，抛出NoSuchElementException
	getLast();
	jdk1.6
	peekFirst(); //如果链表为空，返回null
	peekLast();
	
------------------------------------------	
	
Set:元素不可以重复,是无序。
	set接口中的方法和Collection一样。	
	|--HashSet：内部数据结构是哈希表，是不同步的。
	
		如何保证该集合的元素唯一性呢？
		通过对象的hashCode和equals方法来完成对象唯一性。
		注意：如果元素存储到HashSet集合中，必须覆盖hashCode和equals方程。
		
	|--TreeSet:可以对Set集合中的元素进行排序.
		判断元素唯一性方式：根据比较方法的返回值是否为0，0相同元素。
		
		TreeSet对元素进行排序的方法一：
		让元素自身具备比较功能，就需要实现Comparable接口。覆盖compareTo方法。
		
		如果不要安装对象中具备的自然顺序进行排序。如果对象中不具备自然顺序。
		可以使用TreeSet进行排序的方法二：
		让集合具有比较功能。定义一个类实现Comparator接口，覆盖compare方法。
		将该类对象作为参数传递给TreeSet集合的构造函数。
	
哈希表确定元素是否相同：
1、判断的是两个元素的哈希值是否相同。
	如果相同，再判断两个对象的内容是否相同。
2、判断哈希值相同，其实判断的是对象的hashCode的方法。判断内容相同，用equals方法。
注意:哈希值不同就不再判断内容。	
