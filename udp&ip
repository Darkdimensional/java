建立UDP接收的思路：
	1.建立udpsocket服务。	必须明确端口号。
	2、创建数据包，用于存储接收的数据，方便用数据包对象的方法解析这些数据。
	3、使用socket服务的receive方法将接收的数据存储在数据包中。
	4.通过数据包的方法解析数据包的数据。
	5、关闭资源
创建UDP传输的发送端思路：
	1.建立udp的socketfuw
	2.将要发送的数据封装到数据包中。
	3.通过udp的socket服务将数据包发送出去。
	4.关闭socket服务。
TCP传输，客户端建立的过程：
	1、创建tcp客户端socket服务。使用socket对象。
		建议改对象一创建就明确目的地，
	2、如果连接建立成功，说明数据传输通道已经建立。
		该通道就是socket流，是底层建立好的。既然是流，说明既有输入，又有输出。
		想要输入或者输出对象，可以找socket来获取。
		可以通过getoutputstream()和getinputstream()来获取两个字节流。
	3、使用输出流，将数据写出。
	4、关闭资源。 
建立tcp服务端的思路：
	1、创建服务端socket服务。通过SeverSocket对象。
	2、服务端必须对外提供一个端口，否则客户端无法连接。
	3、获取连接过来的客户端对象。
	4、通过客户端对象获取socket流读取客户端发来的数据
	5、关闭资源，客户端和服务端。
